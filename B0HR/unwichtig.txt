/*function addStar() {
  const geometry = new THREE.SphereGeometry(0.25, 25,25);
  const material = new THREE.MeshStandardMaterial( { color: 0xffffff} )
  const star = new THREE.Mesh( geometry, material);
  
  const [x,y,z] = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread(100));

  star.position.set(x, y, z);
  scene.add(star)
  
}

Array(200).fill().forEach(addStar)*/

//Adds a Pointlight and set its Position
  /*const pointLight = new THREE.PointLight(0xffffff)
  pointLight.position.set(5,25,5)*/

function addAtom() {
  const geometry = new THREE.SphereGeometry(5, 25,25);
  const material = new THREE.MeshStandardMaterial( { color: 0x0006FF} )
  const nukleon = new THREE.Mesh( geometry, material);
}



let camera, scene, raycaster, renderer;

let addNewElektron;


init();
animate();

function init() {  
  container = document.createElement( 'div' );
	document.body.appendChild( container );
  // sets new scene, camera, light and engine (webGL)
    scene = new THREE.Scene();
    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.setZ(30);
    const ambientLight = new THREE.AmbientLight(0xffffff)
    scene.add(ambientLight)
    renderer = new THREE.WebGLRenderer({
      canvas: document.querySelector('#bg'),
    }); //selects the HTML-Element '#bg' as the canvas 
  
  

  //settings for rendering
    renderer.setPixelRatio(window.devicePixelRatio);
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.toneMapping = THREE.ACESFilmicToneMapping
  
  //render
    renderer.render( scene, camera );
    container.appendChild( renderer.domElement );

  // Points out a Mesh resembling the Grid
    const gridHelper = new THREE.GridHelper(200, 50);
    scene.add(gridHelper)

  // Adds mouse-controls for the camera
    const controls = new OrbitControls(camera, renderer.domElement);


  addNewElektron = (x,y,z) => {
      const geometry = new THREE.SphereGeometry(3,32,16)
      const elektron = new THREE.Mesh( geometry, new THREE.MeshStandardMaterial({color: 0x0006FF}));
      elektron.position.set(x,y,z);
      //sphere1.add(elektron);
  }

  addNewElektron(0,0,0)
  addNewElektron(-10,0,0);
  addNewElektron(10,0,0);
  addNewElektron(-20,0,0);
  addNewElektron(20,0,0);
  addNewElektron(0,0,20);
  addNewElektron(0,0,-20);

  

}






//function animate() {
//  requestAnimationFrame( animate );
//  sphere1.rotateY(0.005);

//  controls.update();

//  renderer.render( scene, camera );
//}